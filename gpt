#!/usr/bin/env python3

import openai
import sys
import signal
import markdown
import subprocess
from colorama import Fore, init
from os import environ

# OpenAI API parameters
gpt_model = 'gpt-3.5-turbo'
num_of_samples = 1
temperature = 1.0
max_tokens = 500
openai.api_key = environ['api_key']

# Needed for some linux terminals when using colorama
init()

# Construct ChatBot answer
def prepare_answer():
    messages.append({"role": "user", "content": message})
    chat_completion = openai.ChatCompletion.create(
        model=gpt_model,
        n=num_of_samples,
        temperature=temperature,
        max_tokens=max_tokens,
        messages=messages)
    answer = chat_completion.choices[0].message.content
    markdown_check_response(answer)

# Markdown check and response
def markdown_check_response(answer):
    if markdown.markdown(answer) != answer:
        subprocess.run(
            ["mdcat"], input = f"{Fore.YELLOW}ChatGPT:{Fore.RESET} {answer}".encode())
    else:
        print(f"{Fore.GREEN}ChatGPT: {Fore.RESET}{answer}")
        messages.append({"role": "assistant", "content": answer})

# Handle CTRL_C gracefully
def signal_handler(sig, frame):
    client_exit(sig)
    sys.exit(0)

# Client exit
def client_exit(sig=None):
    if sig:
        print('\nExiting Client ...')
    else:
        print('Exiting Client...')

# Define initial client variables
you = subprocess.check_output(['whoami']).decode('utf-8').strip().capitalize()
messages = [{"role": "system", "content": "ChatBot Ready"}, ]

# Set signal handler
signal.signal(signal.SIGINT, signal_handler)

# Check if you passed an argument. Starting non-conversation mode
if len(sys.argv) > 1:
    message = ' '.join(sys.argv[1:])
    prepare_answer()
else:
    try:
        # You are going into conversation mode
        message = True
        while message:
            message = input(Fore.CYAN + f"{you}: " + Fore.RESET)
            if message == '':
                client_exit()
            elif message:
                prepare_answer()
    except EOFError:
        client_exit(1)